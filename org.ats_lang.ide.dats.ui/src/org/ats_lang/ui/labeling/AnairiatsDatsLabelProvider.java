/*
 * generated by Xtext
 */
package org.ats_lang.ui.labeling;

import java.util.Iterator;

import org.ats_lang.anairiatsDats.AnairiatsDatsPackage;
import org.ats_lang.anairiatsDats.dynprogram;
import org.ats_lang.anairiatsSats.*;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.edit.ui.provider.AdapterFactoryLabelProvider;
import org.eclipse.xtext.nodemodel.ICompositeNode;
import org.eclipse.xtext.nodemodel.ILeafNode;
import org.eclipse.xtext.nodemodel.INode;
import org.eclipse.xtext.nodemodel.util.NodeModelUtils;
import org.eclipse.xtext.ui.label.DefaultEObjectLabelProvider;

import com.google.inject.Inject;

/**
 * Provides labels for a EObjects.
 * 
 * see
 * http://www.eclipse.org/Xtext/documentation/latest/xtext.html#labelProvider
 */
public class AnairiatsDatsLabelProvider extends AnairiatsSatsLabelProvider {

	@Inject
	public AnairiatsDatsLabelProvider(AdapterFactoryLabelProvider delegate) {
		super(delegate);
	}

	@Override
	protected String text(d0ecseq_dyn_rev ele) {
		EObject container = ele.eContainer();

//		if (null != container) {
//			System.out.println("container of d0ecseq_dyn_rev is " + container.getClass().getName());
//		} else {
//			System.out.println("container of d0ecseq_dyn_rev is null");
//		}
		
		if (container instanceof dynprogram) {
			return "Program (d0ecseq_dyn_rev)";
		} else {
			return "d0ecseq_dyn_rev";
		}

	}
	
	/*
	 * //Labels and icons can be computed like this:
	 * 
	 * String text(MyModel ele) { return "my "+ele.getName(); }
	 * 
	 * String image(MyModel ele) { return "MyModel.gif"; }
	 */
}
